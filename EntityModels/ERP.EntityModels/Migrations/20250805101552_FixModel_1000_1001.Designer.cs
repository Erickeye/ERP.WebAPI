// <auto-generated />
using System;
using ERP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERP.EntityModels.Migrations
{
    [DbContext(typeof(ERPContext))]
    [Migration("20250805101552_FixModel_1000_1001")]
    partial class FixModel_1000_1001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1000Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("BankName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int>("BloodType")
                        .HasColumnType("int");

                    b.Property<string>("BusinessPhone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ChineseName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ContactAddress")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EmergencyContact1Address")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EmergencyContact1Name")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("EmergencyContact1Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("EmergencyContact1Relationship")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("EmergencyContact2Address")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EmergencyContact2Name")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("EmergencyContact2Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("EmergencyContact2Relationship")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("ExtensionNumber")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<byte[]>("Headshot")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("HighestEducation")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("IdCard")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<decimal>("LaborPension")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("LineId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("OfficialEmail")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("OnBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ResignationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StaffUid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubBankName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("StaffId");

                    b.ToTable("t_1000Staff");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1001StaffCertificates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Certificate")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("CertificateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CertificateName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("EffectiveDate")
                        .HasColumnType("int");

                    b.Property<bool?>("IsNotify")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NotifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("t_1001StaffCertificates");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1005ProjectStaff", b =>
                {
                    b.Property<int>("f_ProjectStaff_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("f_ProjectStaff_ID"));

                    b.Property<string>("f_ProjectStaff_Account")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_ProjectStaff_BankAccount")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("f_ProjectStaff_BankName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("f_ProjectStaff_Bitrthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_ProjectStaff_ChineseName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_ProjectStaff_ContactAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_ProjectStaff_ContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_ProjectStaff_ContractID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_ProjectStaff_EC1Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_ProjectStaff_EC1Cellphone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_ProjectStaff_EC1Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_ProjectStaff_EC1Relationship")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("f_ProjectStaff_Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_ProjectStaff_EnglishName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_ProjectStaff_Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_ProjectStaff_HighestEducation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_ProjectStaff_IDCard")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("f_ProjectStaff_LaborPension")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("f_ProjectStaff_LineID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("f_ProjectStaff_OnBoardDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("f_ProjectStaff_ResignationDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_ProjectStaff_SubBankName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_ProjectStaff_UID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("f_ProjectStaff_ID");

                    b.ToTable("t_1005ProjectStaff");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1020PerformanceTarget", b =>
                {
                    b.Property<int>("f_PTarget_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("f_PTarget_ID"));

                    b.Property<decimal>("f_PTarget_Achieve")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime>("f_PTarget_Annyal")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_staff_ChineseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_staff_UID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("f_PTarget_ID");

                    b.ToTable("t_1020PerformanceTarget");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1030Dayoff", b =>
                {
                    b.Property<int>("f_Dayoff_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("f_Dayoff_ID"));

                    b.Property<string>("f_Dayoff_Applicant")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("f_Dayoff_Approval")
                        .HasColumnType("bit");

                    b.Property<string>("f_Dayoff_Authorizator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("f_Dayoff_BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("f_Dayoff_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_Dayoff_Department")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("f_Dayoff_EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_Dayoff_LeaveType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_Dayoff_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_Dayoff_Position")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_Dayoff_ProxySign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_Dayoff_Reason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("f_Dayoff_ID");

                    b.ToTable("t_1030Dayoff");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1039DayoffProxy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayoffId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProxyAgree")
                        .HasColumnType("bit");

                    b.Property<int>("ProxyId")
                        .HasColumnType("int");

                    b.Property<int>("SelfId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("t_1039DayoffProxy");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1040Document", b =>
                {
                    b.Property<int>("f_Document_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("f_Document_ID"));

                    b.Property<bool?>("f_Document_Approval")
                        .HasColumnType("bit");

                    b.Property<string>("f_Document_Attachment")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_Document_Authorizator")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_Document_Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_Document_ContactPerson")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_Document_Contract")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("f_Document_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_Document_File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_Document_Level")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_Document_Original")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_Document_Recipient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_Document_Remark1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_Document_Remark2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_Document_Subject")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("f_Document_ID");

                    b.ToTable("t_1040Document");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1050WorkOver", b =>
                {
                    b.Property<int>("f_WorkOver_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("f_WorkOver_ID"));

                    b.Property<string>("f_WorkOver_Applicant")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("f_WorkOver_Approval")
                        .HasColumnType("bit");

                    b.Property<string>("f_WorkOver_Authorizator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_WorkOver_Department")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<TimeSpan>("f_WorkOver_EndTime")
                        .HasColumnType("time");

                    b.Property<string>("f_WorkOver_JobTitle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("f_WorkOver_OvertimeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_WorkOver_OvertimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_WorkOver_Reason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_WorkOver_Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("f_WorkOver_StartTime")
                        .HasColumnType("time");

                    b.Property<decimal?>("f_WorkOver_Time")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("f_WorkOver_ID");

                    b.ToTable("t_1050WorkOver");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1100Department", b =>
                {
                    b.Property<string>("f_deprtmt_ID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("f_deprtmt_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("f_deprtmt_ID");

                    b.ToTable("t_1100Department");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1101Deprtmt", b =>
                {
                    b.Property<string>("f_staff_UID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("f_deprtmt_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("f_deprtmt_MG")
                        .HasColumnType("bit");

                    b.Property<string>("f_deprtmt_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_deprtmt_Seniority")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_staff_ChineseName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("f_staff_UID");

                    b.ToTable("t_1101Deprtmt");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1200PettyCash", b =>
                {
                    b.Property<string>("f_PettyCash_ID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_PettyCash_Accountant")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("f_PettyCash_Accounting")
                        .HasColumnType("bit");

                    b.Property<bool?>("f_PettyCash_Approval")
                        .HasColumnType("bit");

                    b.Property<string>("f_PettyCash_Authorizator")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_PettyCash_Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("f_PettyCash_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_PettyCash_Filler")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_PettyCash_Handler")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_PettyCash_Manager")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_PettyCash_Payee")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("f_PettyCash_PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_PettyCash_Reason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_PettyCash_Supervisor")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("f_PettyCash_TotalAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("f_PettyCash_ID");

                    b.ToTable("t_1200PettyCash");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1201PettyCashDetail", b =>
                {
                    b.Property<int>("f_PettyCashDetail_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("f_PettyCashDetail_ID"));

                    b.Property<decimal?>("f_PettyCashDetail_Amount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("f_PettyCashDetail_Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("f_PettyCashDetail_InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_PettyCashDetail_InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_PettyCashDetail_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_PettyCashDetail_Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_PettyCashDetail_PurchaseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("f_PettyCashDetail_Sort")
                        .HasColumnType("int");

                    b.Property<string>("f_PettyCashDetail_Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("f_PettyCashDetail_Tax")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal?>("f_PettyCashDetail_Total")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("f_PettyCashDetail_Vehicle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_PettyCash_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("f_PettyCashDetail_ID");

                    b.ToTable("t_1201PettyCashDetail");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1700LoginLog", b =>
                {
                    b.Property<int>("f_login_UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("f_login_UID"));

                    b.Property<DateTime?>("f_login_CrateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_login_IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("f_login_Type")
                        .HasColumnType("tinyint");

                    b.Property<string>("f_staff_Account")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("f_login_UID");

                    b.ToTable("t_1700LoginLog");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1710ActionInfo", b =>
                {
                    b.Property<int>("f_ActionInfo_UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("f_ActionInfo_UID"));

                    b.Property<string>("f_ActionInfo_Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_ActionInfo_Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_ActionInfo_ControllerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("f_ActionInfo_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_ActionInfo_Function")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_ActionInfo_IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_ActionInfo_describe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("f_ActionInfo_UID");

                    b.ToTable("t_1710ActionInfo");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._2000Customer.t_2000customer", b =>
                {
                    b.Property<int>("f_customer_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("f_customer_ID"));

                    b.Property<string>("f_custome_InvoiceForm")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<decimal?>("f_customer_Advance")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("f_customer_AttribName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_customer_BankName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_customer_CheckingAccount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_customer_ContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("f_customer_CreditBalance")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal?>("f_customer_CreditLine")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("f_customer_DeliveryAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_customer_FaxPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("f_customer_LastDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("f_customer_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_customer_Owner")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_customer_PayDays")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("f_customer_RegisteredAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_customer_RemittanceAccount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_customer_TaxInvoiceAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_customer_TaxInvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("f_customer_UID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_staff_ChineseName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("f_customer_ID");

                    b.ToTable("t_2000customer");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._2000Customer.t_2010custemploy", b =>
                {
                    b.Property<int>("f_custemploy_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("f_custemploy_ID"));

                    b.Property<string>("f_custemploy_Account")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_custemploy_Department")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_custemploy_Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("f_custemploy_EmotionState")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("f_custemploy_ExtNum")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_custemploy_Job")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_custemploy_MobilePhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_custemploy_Momo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("f_custemploy_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_custemploy_Post")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("f_custemploy_Remark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("f_customer_AttribName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("f_customer_ID")
                        .HasColumnType("int");

                    b.Property<string>("f_customer_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("f_custemploy_ID");

                    b.ToTable("t_2010custemploy");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1001StaffCertificates", b =>
                {
                    b.HasOne("ERP.EntityModels.Models._1000Company.t_1000Staff", "Staff")
                        .WithMany("StaffCertificates")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ERP.EntityModels.Models._1000Company.t_1000Staff", b =>
                {
                    b.Navigation("StaffCertificates");
                });
#pragma warning restore 612, 618
        }
    }
}
